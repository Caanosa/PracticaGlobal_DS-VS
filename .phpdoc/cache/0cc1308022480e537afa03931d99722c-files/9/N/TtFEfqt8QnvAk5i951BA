1741200082
0cc1308022480e537afa03931d99722c-phpdoc%3A1e45611c6b9a4b49e2875b4bb1189032-522c8d378498d104a8e470d68e7c5500
s:5532:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjEyOiJyZWdpc3Ryby5waHAiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiNTIyYzhkMzc4NDk4ZDEwNGE4ZTQ3MGQ2OGU3YzU1MDAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoxNzoidmlldy9yZWdpc3Ryby5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjMyNTI6IjwhRE9DVFlQRSBodG1sPg0KPGh0bWwgbGFuZz0iZXMiPg0KPGhlYWQ+DQogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPg0KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4NCiAgICA8dGl0bGU+UG9rw6ltb25DUyAtIFJlZ2lzdHJvPC90aXRsZT4NCiAgICA8bGluayByZWw9Imljb24iIGhyZWY9Ii9hcHAvdmlldy9pbWFnZW5lcy9sb2dvX3ZlbnRhbmEzLnBuZyI+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvYXBwL3ZpZXcvcmVnaXN0cm8uY3NzIj4NCjwvaGVhZD4NCjxib2R5Pg0KICAgIDxkaXYgY2xhc3M9ImNvbnRlbmVkb3ItcmVnaXN0cm8iPg0KICAgICAgICA8YSBocmVmPSJodHRwOi8vcG9rZW1vbmNhcmRzaG9wLmNvbSI+PGltZyBzcmM9Ii9hcHAvdmlldy9pbWFnZW5lcy9Qb2tlbW9uQ2FyZF9zaG9wX0xPR08ucG5nIiBhbHQ9ImxvZ28iPjwvYT4NCiAgICAgICAgPGRpdiBjbGFzcz0icmVnaXN0cm8tZGl2Ij4NCiAgICAgICAgICAgIDxmb3JtIGlkPSJyZWdpc3Ryb0Zvcm0iIG9uc3VibWl0PSJyZXR1cm4gdmFsaWRhckZvcm11bGFyaW8oZXZlbnQpIiBtZXRob2Q9IlBPU1QiPg0KICAgICAgICAgICAgICA8cCBjbGFzcz0idGl0dWxvUmVnaXN0cm8iPlJlZ2lzdHJvPC9wPg0KICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJub21icmUiPk5vbWJyZTwvbGFiZWw+DQogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ibm9tYnJlIiBwbGFjZWhvbGRlcj0iTm9tYnJlIiBuYW1lPSJub21icmUiPg0KDQogICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImVtYWlsIj5Db3JyZW88L2xhYmVsPg0KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iZW1haWwiIGlkPSJlbWFpbCIgcGxhY2Vob2xkZXI9IkNvcnJlbyIgbmFtZT0iZW1haWwiPg0KDQogICAgICAgICAgICAgIDxsYWJlbCBmb3I9InBhc3N3b3JkIj5Db250cmFzZcOxYTwvbGFiZWw+DQogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJwYXNzd29yZCIgaWQ9InBhc3N3b3JkIiBwbGFjZWhvbGRlcj0iQ29udHJhc2XDsWEiIG5hbWU9ImNvbnRyYXNlbmEiPg0KDQogICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImNvbmZpcm1hclBhc3N3b3JkIj5SZXBldGlyIGNvbnRyYXNlw7FhPC9sYWJlbD4NCiAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBpZD0iY29uZmlybWFyUGFzc3dvcmQiIHBsYWNlaG9sZGVyPSJSZXBldGlyIENvbnRyYXNlw7FhIj4NCg0KICAgICAgICAgICAgICA8cCBpZD0iZXJyb3ItbWVuc2FnZSIgY2xhc3M9ImVycm9yLW1lbnNhZ2UiPjwvcD4NCg0KICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCI+UmVnaXN0cmFybWU8L2J1dHRvbj4NCg0KICAgICAgICAgICAgICA8YSBocmVmPSJsb2dpbi5waHAiIGNsYXNzPSJsb2dpbi1saW5rIj5ZYSB0ZW5nbyB1bmEgY3VlbnRhPC9hPg0KDQogICAgICAgICAgICA8L2Zvcm0+DQogICAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPD9waHANCiAgICAgICAgcmVxdWlyZV9vbmNlICIuLi8uLi9hcHAvY29udHJvbGxlci9Vc3VhcmlvQ29udHJvbGxlci5waHAiOw0KICAgICAgICBzZXNzaW9uX3N0YXJ0KCk7DQogICAgICAgICR1c3VhcmlvQ29udHJvbGxlciA9IG5ldyBVc3VhcmlvQ29udHJvbGxlcigpOw0KICAgICAgICBpZigkX1NFUlZFUlsnUkVRVUVTVF9NRVRIT0QnXT09J1BPU1QnKXsNCiAgICAgICAgICAgICRjYW1wb05vbWJyZVNhbmVhZG8gPSBodG1sc3BlY2lhbGNoYXJzKCgkX1BPU1RbIm5vbWJyZSJdKSk7DQogICAgICAgICAgICAkY2FtcG9FbWFpbFNhbmVhZG8gPSBodG1sc3BlY2lhbGNoYXJzKCgkX1BPU1RbImVtYWlsIl0pKTsNCiAgICAgICAgICAgICRjYW1wb0NvbnRyYXNlbmFTYW5lYWRvID0gaHRtbHNwZWNpYWxjaGFycygkX1BPU1RbImNvbnRyYXNlbmEiXSk7DQogICAgICAgICAgICAkdXNlcmRhdGEgPSAkdXN1YXJpb0NvbnRyb2xsZXItPmNyZWFyVXN1YXJpbygkY2FtcG9Ob21icmVTYW5lYWRvLCAkY2FtcG9FbWFpbFNhbmVhZG8sICRjYW1wb0NvbnRyYXNlbmFTYW5lYWRvKTsNCiAgICAgICAgICAgIGlmKCR1c2VyZGF0YSl7DQogICAgICAgICAgICAgICAgJHVzdWFyaW9Db250cm9sbGVyLT5ndWFyZGFyRW5TZXNpb24oJHVzZXJkYXRhWzBdWyJ1c3VhcmlvX2lkIl0sJHVzZXJkYXRhWzBdWyJub21icmUiXSk7DQogICAgICAgICAgICAgICAgaGVhZGVyKCdMb2NhdGlvbjogaHR0cDovL3Bva2Vtb25jYXJkc2hvcC5jb20nKTsNCiAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgIGVjaG8gKCI8c2NyaXB0Pg0KICAgICAgICAgICAgICAgIHZhciBlcnJvck1lbnNhZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXJyb3ItbWVuc2FnZScpOw0KICAgICAgICAgICAgICAgIGVycm9yTWVuc2FnZS50ZXh0Q29udGVudCA9ICdZYSBleGlzdGUgdW4gdXN1YXJpbyBjb24gZXN0ZSBjb3JyZW8gbyBub21icmUnOw0KICAgICAgICAgICAgICAgIDwvc2NyaXB0PiIpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgIH0NCiAgICA/Pg0KDQogICAgPHNjcmlwdD4NCiAgICAgICAgZnVuY3Rpb24gdmFsaWRhckZvcm11bGFyaW8oZXZlbnQpIHsNCiAgICAgICAgICAgIHZhciBwYXNzd29yZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwYXNzd29yZCIpLnZhbHVlOw0KICAgICAgICAgICAgdmFyIGNvbmZpcm1hclBhc3N3b3JkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNvbmZpcm1hclBhc3N3b3JkIikudmFsdWU7DQogICAgICAgICAgICB2YXIgZXJyb3JNZW5zYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVycm9yLW1lbnNhZ2UiKTsNCg0KICAgICAgICAgICAgaWYgKHBhc3N3b3JkICE9PSBjb25maXJtYXJQYXNzd29yZCkgew0KICAgICAgICAgICAgICAgIGVycm9yTWVuc2FnZS5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsNCiAgICAgICAgICAgICAgICBlcnJvck1lbnNhZ2UudGV4dENvbnRlbnQgPSAiTGFzIGNvbnRyYXNlw7FhcyBubyBjb2luY2lkZW4uIjsNCiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVycm9yTWVuc2FnZS50ZXh0Q29udGVudCA9ICIiOw0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICA8L3NjcmlwdD4NCjwvYm9keT4NCjwvaHRtbD4NCiI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";